class Solution(object):

    def letterCombinations(self, digits):

        if not digits:

            return []

        

        digit_map = {

            '2': 'abc',

            '3': 'def',

            '4': 'ghi',

            '5': 'jkl',

            '6': 'mno',

            '7': 'pqrs',

            '8': 'tuv',

            '9': 'wxyz'

        }

        

        def backtrack(index, current_comb):

            if len(current_comb) == len(digits):

                result.append(current_comb)

                return

            

            current_digit = digits[index]

            for letter in digit_map[current_digit]:

                backtrack(index + 1, current_comb + letter)

        

        result = []

        backtrack(0, "")

        return result

